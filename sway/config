# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term /usr/bin/wezterm
set $term_id org.wezfurlong.wezterm
set $term_scratch_id wezterm_scratchpad
set $btm_scratch_id btm_scratchpad
# set $term foot
# Your preferred application launcher
set $menu wmenu-run
set $t_pos border none, move position center, resize set width 100 ppt height 100 ppt

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input type:keyboard xkb_numlock enabled
# default layout
input "1:1:AT_Translated_Set_2_keyboard" {
	   xkb_layout se
}
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # shutdown / restart / suspend ...
    set $mode_system \
    System (l) lock, (e) logout, (s) suspend, \
    (h) hibernate, (r) reboot, (Ctrl+s) shutdown

    mode "$mode_system" {
        bindsym l exec --no-startup-id $swaylockwall, mode "default"
        bindsym e exec --no-startup-id swaymsg exit, mode "default"
        bindsym s exec --no-startup-id $swaylockwall && systemctl suspend, \
        mode "default"
        bindsym h exec --no-startup-id $swaylockwall && systemctl hibernate, \
        mode "default"
        bindsym r exec --no-startup-id systemctl reboot, mode "default"
        bindsym CTRL+s exec --no-startup-id systemctl poweroff -i, \
        mode "default"

        # to close the menu: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }

    bindsym $mod+BackSpace mode "$mode_system"

    # lock screen
    bindsym $mod+CTRL+Shift+l exec --no-start-id $swaplockwall
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
set $terms "1: terms"
set $web "2: web"
set $ide "3: ide"
set $file_manager "4: files"
set $mail "5: mail"
set $db "6: db"
set $documents "7: documents"
set $mindmap "8: mindmap"

# Switch to workspace
    bindsym $mod+1 workspace number $terms
    bindsym $mod+2 workspace number $web
    bindsym $mod+3 workspace number $ide
    bindsym $mod+4 workspace number $file_manager
    bindsym $mod+5 workspace number $mail
    bindsym $mod+6 workspace number $db
    bindsym $mod+7 workspace number $documents
    bindsym $mod+8 workspace number $mindmap
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $terms
    bindsym $mod+Shift+2 move container to workspace number $web
    bindsym $mod+Shift+3 move container to workspace number $ide
    bindsym $mod+Shift+4 move container to workspace number $file_manager
    bindsym $mod+Shift+5 move container to workspace number $mail
    bindsym $mod+Shift+6 move container to workspace number $db
    bindsym $mod+Shift+7 move container to workspace number $documents
    bindsym $mod+Shift+8 move container to workspace number $mindmap
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Go back to your last workspace with the same keystroke
    workspace_auto_back_and_forth yes

    # Assign workspaces for applications
    # assign [class="zed" instance="Navigator"] $ide
    # assign [class="thunderbird" instance="Navigator"] $mail
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+Ctrl+v splith
    bindsym $mod+Ctrl+h splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Don't switch focus with mouse
    focus_follows_mouse no

    # floating pop up automatically
    for_window [window_role="pop-up"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [id="gnome-calculator"] floating enable; border pixel

#
# Lockscreen:
#
    set $swaylockwall swaylock -i $HOME/Bilder/gabbro.jpg
    bindsym $mod+CTRL+Shift+l exec --no-startup-id $swaylockwall
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    # Terminal scratchpad
    for_window {
        # main terminal
        [app_id=$term_scratch_id] {
            move to scratchpad
            [app_id=$term_scratch_id] scratchpad show
            $t_pos
        }
        # btm scratchpad
        [app_id=$btm_scratch_id] {
            move to scratchpad
            [app_id=$btm_scratch_id] scratchpad show
            $t_pos
        }
    }
    bindsym --to-code {
        $mod+Shift+t    exec swaymsg [app_id=$term_scratch_id] scratchpad show || exec $term start --class $term_scratch_id, $t_pos
        $mod+Shift+p    exec swaymsg [app_id=$btm_scratch_id] scratchpad show || exec $term start --class $btm_scratch_id -e btm, $t_pos
    }
    exec $term

    # btm scratchpad
#    for_window [instance="btm_scratchpad"] move to scratchpad, border none
#   bindsym $mod+Shift+p [instance="btm_scratchpad"] scratchpad show
#    exec wezterm -name btm_scratchpad -e btm
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

#
# Colours:
#
# special
set $foreground #C6C6C6
set $background #1C1C1C
set $cursorColor #C6C6C6
# black
set $black1 #303030
set $black2 #444444
set $trueblack #000000
# red
set $red1 #d75f5f
set $red2 #d75f5f
# green
set $green1 #87AF87
set $green2 #87AF87
# yellow
set $yellow1 #ffd75f
set $yellow2 #ffd75f
# blue
set $blue1 #87afd7
set $blue2 #87afd7
# magenta
set $cyan1 #afafd7
set $cyan2 #afafd7
# cyan
set $cyan1 #afd7ff
set $cyan2 #afd7ff
# white
set $white1 #4E4E4E
set $white2 #ffffff

##########
# DESIGN #
##########

# hide borders
hide_edge_borders both

# class                 border  backgr. text    indicator child_border
client.focused          #333333 $black2 $white2 #285577
client.focused_inactive #333333 $background $foreground #484e50
client.unfocused        #333333 #222222 #888888 #292d2e #222222
client.urgent           $red1   $red1   $white2 $red1   $red1
client.placeholder      #000000 #0c0c0c $white2 #000000 #0c0c0c

for_window [class="WezTerm*"] border pixel 1

include /etc/sway/config.d/*
